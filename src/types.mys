class WrongTypeError(Error):
    pass

trait Type:

    func to_byte(self) -> u8:
        raise WrongTypeError()

    func to_boolean(self) -> bool:
        raise WrongTypeError()

    func to_int16(self) -> i16:
        raise WrongTypeError()

    func to_uint16(self) -> u16:
        raise WrongTypeError()

    func to_int32(self) -> i32:
        raise WrongTypeError()

    func to_uint32(self) -> u32:
        raise WrongTypeError()

    func to_int64(self) -> i64:
        raise WrongTypeError()

    func to_uint64(self) -> u64:
        raise WrongTypeError()

    func to_double(self) -> f64:
        raise WrongTypeError()

    func to_string(self) -> string:
        raise WrongTypeError()

    func to_object_path(self) -> string:
        raise WrongTypeError()

    func to_signature(self) -> string:
        raise WrongTypeError()

    func to_array(self) -> [Type]:
        raise WrongTypeError()

    func to_struct(self) -> [Type]:
        raise WrongTypeError()

    func to_dict(self) -> {Type: Type}:
        raise WrongTypeError()

    func to_variant(self) -> (string, Type):
        raise WrongTypeError()

class Byte(Type):
    """A BYTE. Type code 'y'.

    """

    value: u8

    func to_byte(self) -> u8:
        return self.value

class Boolean(Type):
    """A BOOLEAN. Type code 'b'.

    """

    value: bool

    func to_boolean(self) -> bool:
        return self.value

class Int16(Type):
    """An INT16. Type code 'n'.

    """

    value: i16

    func to_int16(self) -> i16:
        return self.value

class Uint16(Type):
    """An UINT16. Type code 'q'.

    """

    value: u16

    func to_uint16(self) -> u16:
        return self.value

class Int32(Type):
    """An INT32. Type code 'i'.

    """

    value: i32

    func to_int32(self) -> i32:
        return self.value

class Uint32(Type):
    """An UINT32. Type code 'u'.

    """

    value: u32

    func to_uint32(self) -> u32:
        return self.value

class Int64(Type):
    """An INT64. Type code 'x'.

    """

    value: i64

    func to_int64(self) -> i64:
        return self.value

class Uint64(Type):
    """An UINT64. Type code 't'.

    """

    value: u64

    func to_uint64(self) -> u64:
        return self.value

class Double(Type):
    """A DOUBLE. Type code 'd'.

    """

    value: f64

    func to_double(self) -> f64:
        return self.value

class String(Type):
    """A STRING. Type code 's'.

    """

    value: string

    func to_string(self) -> string:
        return self.value

class UnixFd(Type):
    """A UNIX_FD. Type code 'h'.

    """

class ObjectPath(Type):
    """An OBJECT_PATH. Type code 'o'.

    """

    value: string

    func to_object_path(self) -> string:
        return self.value

class Signature(Type):
    """A SIGNATURE. Type code 'g'.

    """

    value: string

    func to_signature(self) -> string:
        return self.value

class Array(Type):
    """An ARRAY. Type code 'a'.

    """

    value: [Type]

    func to_array(self) -> [Type]:
        return self.value

class Struct(Type):
    """A STRUCT. Type code 'r', '(' and ')'.

    """

    value: [Type]

    func to_struct(self) -> [Type]:
        return self.value

class Dict(Type):
    """Zero or more DICT_ENTRY. Type code 'e', '{' and '}'.

    """

    value: {Type: Type}

    func to_dict(self) -> {Type: Type}:
        return self.value

class Variant(Type):
    """A VARIANT.

    """

    signature: string
    value: Type

    func to_variant(self) -> (string, Type):
        return (self.signature, self.value)
